#include <iostream>
#include <fstream>
#include <vector>

#include "CalcEfficiency/EventTreeFCBM.h"
#include "CalcEfficiency/Utils.h"

#include "TTree.h"
#include "TFile.h"
#include "TString.h"
#include "TLorentzVector.h"

EventTreeFCBM::EventTreeFCBM() {
}

EventTreeFCBM::~EventTreeFCBM() {
}

int EventTreeFCBM::initialize( TString outfile = "test.root" ) {
//int EventTree::initialize( TFile* outfile, TTree* outtree )

    //initialize the event tree
    m_file	= new TFile( outfile, "recreate" );
    //m_file	= outfile;
    m_tree 	= new TTree( "t_tap", "TrigMuonTagAndProbe" );
    //m_tree    = outtree;
    //m_tree->SetDirectory( m_file );

    //--------------------------------------------------
    // VARIABLE SET UP
    //-------------------------------------------------
    //
    // Event variables
    EventNumber = 0;
    RunNumber = 0;
    LumiBlock = 0;
    AverageInteractionsPerCrossing = 0;
    // muon variables
    mes_name = "";
    n_muon = 0;
    muon_offline_pt                    = new vector < double > ();
    muon_offline_eta                   = new vector < double > ();
    muon_offline_exteta                = new vector < double > ();
    muon_offline_extinneta             = new vector < double > ();
    muon_offline_phi                   = new vector < double > ();
    muon_offline_extphi                = new vector < double > ();
    muon_offline_extinnphi             = new vector < double > ();
    muon_offline_d0                    = new vector < double > ();
    muon_offline_z0                    = new vector < double > ();
    muon_offline_charge                = new vector < double > ();
    muon_n_offlineSegment              = new vector < int > ();
    muon_offlineSegment_x              = new vector < vector < double > > ();
    muon_offlineSegment_y              = new vector < vector < double > > ();
    muon_offlineSegment_z              = new vector < vector < double > > ();
    muon_offlineSegment_px             = new vector < vector < double > > ();
    muon_offlineSegment_py             = new vector < vector < double > > ();
    muon_offlineSegment_pz             = new vector < vector < double > > ();
    muon_offlineSegment_chiSquared     = new vector < vector < double > > ();
    muon_offlineSegment_NumberDoF      = new vector < vector < double > > ();
    muon_offlineSegment_sector         = new vector < vector < double > > ();
    muon_offlineSegment_chamberIndex   = new vector < vector < double > > ();
    muon_offlineSegment_etaIndex       = new vector < vector < double > > ();
    muon_offlineSegment_nPrecisionHits = new vector < vector < double > > ();
    muon_offlineSegment_NPhiLayers     = new vector < vector < double > > ();
    muon_offlineSegment_NTrigEtaLayers = new vector < vector < double > > ();
    muon_EFTAG_pass                    = new vector < int > ();
    muon_EFTAG_pt                      = new vector < double > ();
    muon_EFTAG_eta                     = new vector < double > ();
    muon_EFTAG_phi                     = new vector < double > ();
    muon_L1_pass                       = new vector < int > ();
    muon_L1_pt                         = new vector < double > ();
    muon_L1_eta                        = new vector < double > ();
    muon_L1_phi                        = new vector < double > ();
    muon_L1_RoINumber                  = new vector < int > ();
    muon_L1_RoISector                  = new vector < int > ();
    muon_SA_HypoPass                   = new vector < int > ();
    muon_SA_OvRmPass                   = new vector < bool > ();
    muon_SA_pt                         = new vector < double > ();
    muon_SA_eta                        = new vector < double > ();
    muon_SA_phi                        = new vector < double > ();
    muon_SA_etaMS                      = new vector < double > ();
    muon_SA_etaBE                      = new vector < double > ();
    muon_SA_phiMS                      = new vector < double > ();
    muon_SA_phiBE                      = new vector < double > ();
    muon_SA_TGCpt                      = new vector < double > ();
    muon_SA_ptBarrelRadius             = new vector < double > ();
    muon_SA_ptBarrelSagitta            = new vector < double > ();
    muon_SA_ptEndcapAlpha              = new vector < double > ();
    muon_SA_ptEndcapBeta               = new vector < double > ();
    muon_SA_ptEndcapRadius             = new vector < double > ();
    muon_SA_CSCpt                      = new vector < double > ();
    muon_SA_sAddress                   = new vector < double > ();
    muon_SA_SP_rBI                     = new vector < double > ();
    muon_SA_SP_rBM                     = new vector < double > ();
    muon_SA_SP_rBO                     = new vector < double > ();
    muon_SA_SP_rEI                     = new vector < double > ();
    muon_SA_SP_rEM                     = new vector < double > ();
    muon_SA_SP_rEO                     = new vector < double > ();
    muon_SA_SP_rEE                     = new vector < double > ();
    muon_SA_SP_rCSC                    = new vector < double > ();
    muon_SA_SP_rBEE                    = new vector < double > ();
    muon_SA_SP_rBME                    = new vector < double > ();
    muon_SA_SP_zBI                     = new vector < double > ();
    muon_SA_SP_zBM                     = new vector < double > ();
    muon_SA_SP_zBO                     = new vector < double > ();
    muon_SA_SP_zEI                     = new vector < double > ();
    muon_SA_SP_zEM                     = new vector < double > ();
    muon_SA_SP_zEO                     = new vector < double > ();
    muon_SA_SP_zEE                     = new vector < double > ();
    muon_SA_SP_zCSC                    = new vector < double > ();
    muon_SA_SP_zBEE                    = new vector < double > ();
    muon_SA_SP_zBME                    = new vector < double > ();
    muon_SA_SP_slopeBI                 = new vector < double > ();
    muon_SA_SP_slopeBM                 = new vector < double > ();
    muon_SA_SP_slopeBO                 = new vector < double > ();
    muon_SA_SP_slopeEI                 = new vector < double > ();
    muon_SA_SP_slopeEM                 = new vector < double > ();
    muon_SA_SP_slopeEO                 = new vector < double > ();
    muon_SA_SP_slopeEE                 = new vector < double > ();
    muon_SA_SP_slopeCSC                = new vector < double > ();
    muon_SA_SP_slopeBEE                = new vector < double > ();
    muon_SA_SP_slopeBME                = new vector < double > ();
    muon_SA_SP_interceptBI             = new vector < double > ();
    muon_SA_SP_interceptBM             = new vector < double > ();
    muon_SA_SP_interceptBO             = new vector < double > ();
    muon_SA_SP_interceptEI             = new vector < double > ();
    muon_SA_SP_interceptEM             = new vector < double > ();
    muon_SA_SP_interceptEO             = new vector < double > ();
    muon_SA_SP_interceptEE             = new vector < double > ();
    muon_SA_SP_interceptCSC            = new vector < double > ();
    muon_SA_SP_interceptBEE            = new vector < double > ();
    muon_SA_SP_interceptBME            = new vector < double > ();
    muon_SA_SP_chi2BI                  = new vector < double > ();
    muon_SA_SP_chi2BM                  = new vector < double > ();
    muon_SA_SP_chi2BO                  = new vector < double > ();
    muon_SA_SP_chi2EI                  = new vector < double > ();
    muon_SA_SP_chi2EM                  = new vector < double > ();
    muon_SA_SP_chi2EO                  = new vector < double > ();
    muon_SA_SP_chi2EE                  = new vector < double > ();
    muon_SA_SP_chi2CSC                 = new vector < double > ();
    muon_SA_SP_chi2BEE                 = new vector < double > ();
    muon_SA_SP_chi2BME                 = new vector < double > ();
    muon_SA_RoIEta                     = new vector < float > ();
    muon_SA_RoIPhi                     = new vector < float > ();
    muon_SA_isRPCFailure               = new vector < double > ();
    muon_SA_isTGCFailure               = new vector < double > ();
    muon_SA_BarrelRadius               = new vector < double > ();
    muon_SA_BarrelSagitta              = new vector < double > ();
    muon_SA_EtaMap                     = new vector < double > ();
    muon_SA_PhiMap                     = new vector < double > ();
    muon_SA_RoINumber                  = new vector < uint32_t > ();
    muon_SA_RoISector                  = new vector < uint32_t > ();
    muon_SA_RPCHit_x                   = new vector < vector < float > > ();
    muon_SA_RPCHit_y                   = new vector < vector < float > > ();
    muon_SA_RPCHit_z                   = new vector < vector < float > > ();
    muon_SA_RPCHit_r                   = new vector < vector < double > > ();
    muon_SA_RPCHit_eta                 = new vector < vector < double > > ();
    muon_SA_RPCHit_phi                 = new vector < vector <double > > ();
    muon_SA_RPCHit_measuresPhi         = new vector < vector < uint32_t > > ();
    muon_SA_RPCHit_stationName         = new vector < vector < string > > ();
    muon_SA_RPCHit_stationNumber       = new vector < vector < double > > ();
    muon_SA_RPCFit_innPhi              = new vector < float > ();
    muon_SA_RPCFit_innSlope            = new vector < float > ();
    muon_SA_RPCFit_innOffset           = new vector < float > ();
    muon_SA_RPCFit_midPhi              = new vector < float > ();
    muon_SA_RPCFit_midSlope            = new vector < float > ();
    muon_SA_RPCFit_midOffset           = new vector < float > ();
    muon_SA_RPCFit_outPhi              = new vector < float > ();
    muon_SA_RPCFit_outSlope            = new vector < float > ();
    muon_SA_RPCFit_outOffset           = new vector < float > ();
    muon_SA_roadAw                     = new vector < vector < float > > ();
    muon_SA_roadBw                     = new vector < vector < float > > ();
    muon_SA_zMin                       = new vector < vector < float > > ();
    muon_SA_zMax                       = new vector < vector < float > > ();
    muon_SA_rMin                       = new vector < vector < float > > ();
    muon_SA_rMax                       = new vector < vector < float > > ();
    muon_SA_etaMin                     = new vector < vector < float > > ();
    muon_SA_etaMax                     = new vector < vector < float > > ();
    muon_SA_MDTHit_isOutlier           = new vector < vector < int > > ();
    muon_SA_MDTHit_chamber             = new vector < vector < int > > ();
    muon_SA_MDTHit_r                   = new vector < vector < float > > ();
    muon_SA_MDTHit_z                   = new vector < vector < float > > ();
    muon_SA_MDTHit_phi                 = new vector < vector < float > > ();
    muon_SA_MDTHit_residual            = new vector < vector < float > > ();
    muon_SA_MDTHit_space               = new vector < vector < float > > ();
    muon_SA_MDTHit_sigma               = new vector < vector < float > > ();
    muon_CB_HypoPass                   = new vector < int > ();
    muon_CB_OvRmPass                   = new vector < bool > ();
    muon_CB_pt                         = new vector < double > ();
    muon_CB_eta                        = new vector < double > ();
    muon_CB_phi                        = new vector < double > ();
    muon_EF_pass                       = new vector < int > ();
    muon_EF_pt                         = new vector < double > ();
    muon_EF_eta                        = new vector < double > ();
    muon_EF_phi                        = new vector < double > ();
  //
  //--------------------------------------------------
  // BRANCH SET UP
  //--------------------------------------------------

    m_tree->Branch( "EventNumber",                    &EventNumber );
    m_tree->Branch( "RunNumber",                      &RunNumber );
    m_tree->Branch( "LumiBlock",                      &LumiBlock );
    m_tree->Branch( "AverageInteractionsPerCrossing", &AverageInteractionsPerCrossing );
    m_tree->Branch( "mes_name",                       &mes_name );
    m_tree->Branch( "nMuon",                          &n_muon);
    m_tree->Branch( "OfflinePt",                      &muon_offline_pt );
    m_tree->Branch( "OfflineEta",                     &muon_offline_eta );
    m_tree->Branch( "OfflineExtEta",                  &muon_offline_exteta );
    m_tree->Branch( "OfflineExtInnEta",               &muon_offline_extinneta );
    m_tree->Branch( "OfflinePhi",                     &muon_offline_phi );
    m_tree->Branch( "OfflineExtPhi",                  &muon_offline_extphi );
    m_tree->Branch( "OfflineExtInnPhi",               &muon_offline_extinnphi );
    m_tree->Branch( "OfflineD0",                      &muon_offline_d0 );
    m_tree->Branch( "OfflineZ0",                      &muon_offline_z0 );
    m_tree->Branch( "OfflineCharge",                  &muon_offline_charge );
    m_tree->Branch( "OfflineNumSegment",              &muon_n_offlineSegment );
    m_tree->Branch( "OfflineSegmentX",                &muon_offlineSegment_x );
    m_tree->Branch( "OfflineSegmentY",                &muon_offlineSegment_y );
    m_tree->Branch( "OfflineSegmentZ",                &muon_offlineSegment_z );
    m_tree->Branch( "OfflineSegmentPx",               &muon_offlineSegment_px );
    m_tree->Branch( "OfflineSegmentPy",               &muon_offlineSegment_py );
    m_tree->Branch( "OfflineSegmentPz",               &muon_offlineSegment_pz );
    m_tree->Branch( "OfflineSegmentChiSquared",       &muon_offlineSegment_chiSquared );
    m_tree->Branch( "OfflineSegmentNumberDoF",        &muon_offlineSegment_NumberDoF );
    m_tree->Branch( "OfflineSegmentSector",           &muon_offlineSegment_sector );
    m_tree->Branch( "OfflineSegmentChamberIndex",     &muon_offlineSegment_chamberIndex );
    m_tree->Branch( "OfflineSegmentEtaIndex",         &muon_offlineSegment_etaIndex );
    m_tree->Branch( "OfflineSegmentNPrecisionHits",   &muon_offlineSegment_nPrecisionHits );
    m_tree->Branch( "OfflineSegmentNPhiLayers",       &muon_offlineSegment_NPhiLayers );
    m_tree->Branch( "OfflineSegmentNTrigEtaLayers",   &muon_offlineSegment_NTrigEtaLayers );
    m_tree->Branch( "EFTAGPass",                      &muon_EFTAG_pass );
    m_tree->Branch( "EFTAGPt",                        &muon_EFTAG_pt );
    m_tree->Branch( "EFTAGEta",                       &muon_EFTAG_eta );
    m_tree->Branch( "EFTAGPhi",                       &muon_EFTAG_phi );
    m_tree->Branch( "L1Pass",                         &muon_L1_pass );
    m_tree->Branch( "L1Pt",                           &muon_L1_pt );
    m_tree->Branch( "L1Eta",                          &muon_L1_eta );
    m_tree->Branch( "L1Phi",                          &muon_L1_phi );
    m_tree->Branch( "L1RoINumber",                    &muon_L1_RoINumber );
    m_tree->Branch( "L1RoISector",                    &muon_L1_RoISector );
    m_tree->Branch( "SAHypoPass",                     &muon_SA_HypoPass );
    m_tree->Branch( "SAOvRmPass",                     &muon_SA_OvRmPass );
    m_tree->Branch( "SAPt",                           &muon_SA_pt );
    m_tree->Branch( "SAEta",                          &muon_SA_eta );
    m_tree->Branch( "SAPhi",                          &muon_SA_phi );
    m_tree->Branch( "SAEtaMS",                        &muon_SA_etaMS );
    m_tree->Branch( "SAEtaBE",                        &muon_SA_etaBE );
    m_tree->Branch( "SAPhiMS",                        &muon_SA_phiMS );
    m_tree->Branch( "SAPhiBE",                        &muon_SA_phiBE );
    m_tree->Branch( "SATGCPt",                        &muon_SA_TGCpt );
    m_tree->Branch( "SAPtBarrelRadius",               &muon_SA_ptBarrelRadius );
    m_tree->Branch( "SAPtBarrelSagitta",              &muon_SA_ptBarrelSagitta );
    m_tree->Branch( "SAPtEndcapAlpha",                &muon_SA_ptEndcapAlpha );
    m_tree->Branch( "SAPtEndcapBeta",                 &muon_SA_ptEndcapBeta );
    m_tree->Branch( "SAPtEndcapRadius",               &muon_SA_ptEndcapRadius );
    m_tree->Branch( "SACSCPt",                        &muon_SA_CSCpt );
    m_tree->Branch( "SAsAddress",                     &muon_SA_sAddress );
    m_tree->Branch( "SASPR_BI",                       &muon_SA_SP_rBI );
    m_tree->Branch( "SASPR_BM",                       &muon_SA_SP_rBM );
    m_tree->Branch( "SASPR_BO",                       &muon_SA_SP_rBO );
    m_tree->Branch( "SASPR_EI",                       &muon_SA_SP_rEI );
    m_tree->Branch( "SASPR_EM",                       &muon_SA_SP_rEM );
    m_tree->Branch( "SASPR_EO",                       &muon_SA_SP_rEO );
    m_tree->Branch( "SASPR_EE",                       &muon_SA_SP_rEE );
    m_tree->Branch( "SASPR_CSC",                      &muon_SA_SP_rCSC );
    m_tree->Branch( "SASPR_BEE",                      &muon_SA_SP_rBEE );
    m_tree->Branch( "SASPR_BME",                      &muon_SA_SP_rBME );
    m_tree->Branch( "SASPZ_BI",                       &muon_SA_SP_zBI );
    m_tree->Branch( "SASPZ_BM",                       &muon_SA_SP_zBM );
    m_tree->Branch( "SASPZ_BO",                       &muon_SA_SP_zBO );
    m_tree->Branch( "SASPZ_EI",                       &muon_SA_SP_zEI );
    m_tree->Branch( "SASPZ_EM",                       &muon_SA_SP_zEM );
    m_tree->Branch( "SASPZ_EO",                       &muon_SA_SP_zEO );
    m_tree->Branch( "SASPZ_EE",                       &muon_SA_SP_zEE );
    m_tree->Branch( "SASPZ_CSC",                      &muon_SA_SP_zCSC );
    m_tree->Branch( "SASPZ_BEE",                      &muon_SA_SP_zBEE );
    m_tree->Branch( "SASPZ_BME",                      &muon_SA_SP_zBME );
    m_tree->Branch( "SASPSlope_BI",                   &muon_SA_SP_slopeBI );
    m_tree->Branch( "SASPSlope_BM",                   &muon_SA_SP_slopeBM );
    m_tree->Branch( "SASPSlope_BO",                   &muon_SA_SP_slopeBO );
    m_tree->Branch( "SASPSlope_EI",                   &muon_SA_SP_slopeEI );
    m_tree->Branch( "SASPSlope_EM",                   &muon_SA_SP_slopeEM );
    m_tree->Branch( "SASPSlope_EO",                   &muon_SA_SP_slopeEO );
    m_tree->Branch( "SASPSlope_EE",                   &muon_SA_SP_slopeEE );
    m_tree->Branch( "SASPSlope_CSC",                  &muon_SA_SP_slopeCSC );
    m_tree->Branch( "SASPSlope_BEE",                  &muon_SA_SP_slopeBEE );
    m_tree->Branch( "SASPSlope_BME",                  &muon_SA_SP_slopeBME );
    m_tree->Branch( "SASPIntercept_BI",               &muon_SA_SP_interceptBI );
    m_tree->Branch( "SASPIntercept_BM",               &muon_SA_SP_interceptBM );
    m_tree->Branch( "SASPIntercept_BO",               &muon_SA_SP_interceptBO );
    m_tree->Branch( "SASPIntercept_EI",               &muon_SA_SP_interceptEI );
    m_tree->Branch( "SASPIntercept_EM",               &muon_SA_SP_interceptEM );
    m_tree->Branch( "SASPIntercept_EO",               &muon_SA_SP_interceptEO );
    m_tree->Branch( "SASPIntercept_EE",               &muon_SA_SP_interceptEE );
    m_tree->Branch( "SASPIntercept_CSC",              &muon_SA_SP_interceptCSC );
    m_tree->Branch( "SASPIntercept_BEE",              &muon_SA_SP_interceptBEE );
    m_tree->Branch( "SASPIntercept_BME",              &muon_SA_SP_interceptBME );
    m_tree->Branch( "SASPChi2_BI",                    &muon_SA_SP_chi2BI );
    m_tree->Branch( "SASPChi2_BM",                    &muon_SA_SP_chi2BM );
    m_tree->Branch( "SASPChi2_BO",                    &muon_SA_SP_chi2BO );
    m_tree->Branch( "SASPChi2_EI",                    &muon_SA_SP_chi2EI );
    m_tree->Branch( "SASPChi2_EM",                    &muon_SA_SP_chi2EM );
    m_tree->Branch( "SASPChi2_EO",                    &muon_SA_SP_chi2EO );
    m_tree->Branch( "SASPChi2_EE",                    &muon_SA_SP_chi2EE );
    m_tree->Branch( "SASPChi2_CSC",                   &muon_SA_SP_chi2CSC );
    m_tree->Branch( "SASPChi2_BEE",                   &muon_SA_SP_chi2BEE );
    m_tree->Branch( "SASPChi2_BME",                   &muon_SA_SP_chi2BME );
    m_tree->Branch( "SARoIEta",                       &muon_SA_RoIEta );
    m_tree->Branch( "SARoIPhi",                       &muon_SA_RoIPhi );
    m_tree->Branch( "SAisRPCFailure",                 &muon_SA_isRPCFailure );
    m_tree->Branch( "SAisTGCFailure",                 &muon_SA_isTGCFailure );
    m_tree->Branch( "SABarrelRadius",                 &muon_SA_BarrelRadius );
    m_tree->Branch( "SABarrelSagitta",                &muon_SA_BarrelSagitta );
    m_tree->Branch( "SAEtaMap",                       &muon_SA_EtaMap );
    m_tree->Branch( "SAPhiMap",                       &muon_SA_PhiMap );
    m_tree->Branch( "SARoINumber",                    &muon_SA_RoINumber );
    m_tree->Branch( "SARoISector",                    &muon_SA_RoISector );
    m_tree->Branch( "SARPCHitX",                      &muon_SA_RPCHit_x );
    m_tree->Branch( "SARPCHitY",                      &muon_SA_RPCHit_y );
    m_tree->Branch( "SARPCHitZ",                      &muon_SA_RPCHit_z );
    m_tree->Branch( "SARPCHitR",                      &muon_SA_RPCHit_r );
    m_tree->Branch( "SARPCHitEta",                    &muon_SA_RPCHit_eta );
    m_tree->Branch( "SARPCHitPhi",                    &muon_SA_RPCHit_phi );
    m_tree->Branch( "SARPCHitMeasuresPhi",            &muon_SA_RPCHit_measuresPhi );
    m_tree->Branch( "SARPCHitStationName",            &muon_SA_RPCHit_stationName );
    m_tree->Branch( "SARPCHitStationNumber",          &muon_SA_RPCHit_stationNumber );
    m_tree->Branch( "SARPCFitInnPhi",                 &muon_SA_RPCFit_innPhi );
    m_tree->Branch( "SARPCFitInnSlope",               &muon_SA_RPCFit_innSlope );
    m_tree->Branch( "SARPCFitInnOffset",              &muon_SA_RPCFit_innOffset );
    m_tree->Branch( "SARPCFitMidPhi",                 &muon_SA_RPCFit_midPhi );
    m_tree->Branch( "SARPCFitMidSlope",               &muon_SA_RPCFit_midSlope );
    m_tree->Branch( "SARPCFitMidOffset",              &muon_SA_RPCFit_midOffset );
    m_tree->Branch( "SARPCFitOutPhi",                 &muon_SA_RPCFit_outPhi );
    m_tree->Branch( "SARPCFitOutSlope",               &muon_SA_RPCFit_outSlope );
    m_tree->Branch( "SARPCFitOutOffset",              &muon_SA_RPCFit_outOffset );
    m_tree->Branch( "SARoadAw",                       &muon_SA_roadAw );
    m_tree->Branch( "SARoadBw",                       &muon_SA_roadBw );
    m_tree->Branch( "SAzMin",                         &muon_SA_zMin );
    m_tree->Branch( "SAzMax",                         &muon_SA_zMax );
    m_tree->Branch( "SArMin",                         &muon_SA_rMin );
    m_tree->Branch( "SArMax",                         &muon_SA_rMax );
    m_tree->Branch( "SAEtaMin",                       &muon_SA_etaMin );
    m_tree->Branch( "SAEtaMax",                       &muon_SA_etaMax );
    m_tree->Branch( "SAMDTHitisOutlier",              &muon_SA_MDTHit_isOutlier );
    m_tree->Branch( "SAMDTHitChamber",                &muon_SA_MDTHit_chamber );
    m_tree->Branch( "SAMDTHitR",                      &muon_SA_MDTHit_r );
    m_tree->Branch( "SAMDTHitZ",                      &muon_SA_MDTHit_z );
    m_tree->Branch( "SAMDTHitPhi",                    &muon_SA_MDTHit_phi );
    m_tree->Branch( "SAMDTHitResidual",               &muon_SA_MDTHit_residual );
    m_tree->Branch( "SAMDTHitSpace",                  &muon_SA_MDTHit_space );
    m_tree->Branch( "SAMDTHitSigma",                  &muon_SA_MDTHit_sigma );
    m_tree->Branch( "CBHypoPass",                     &muon_CB_HypoPass );
    m_tree->Branch( "CBOvRmPass",                     &muon_CB_OvRmPass );
    m_tree->Branch( "CBPt",                           &muon_CB_pt );
    m_tree->Branch( "CBEta",                          &muon_CB_eta );
    m_tree->Branch( "CBPhi",                          &muon_CB_phi );
    m_tree->Branch( "EFPass",                         &muon_EF_pass );
    m_tree->Branch( "EFPt",                           &muon_EF_pt );
    m_tree->Branch( "EFEta",                          &muon_EF_eta );
    m_tree->Branch( "EFPhi",                          &muon_EF_phi );

  return 1;
}

EventTreeFCBM::EventTreeFCBM(TFile *file, TString name )
{
  m_tree=(TTree*)file->Get( name );

  //--------------------------------------------------
  // VARIABLE SET UP
  //--------------------------------------------------

  // Event variables
  EventNumber = 0;
  RunNumber = 0;
  LumiBlock = 0;
  AverageInteractionsPerCrossing = 0;

  // muon variables
  mes_name = "";
  n_muon = 0;
    muon_offline_pt                    = new vector < double > ();
    muon_offline_eta                   = new vector < double > ();
    muon_offline_exteta                = new vector < double > ();
    muon_offline_extinneta             = new vector < double > ();
    muon_offline_phi                   = new vector < double > ();
    muon_offline_extphi                = new vector < double > ();
    muon_offline_extinnphi             = new vector < double > ();
    muon_offline_d0                    = new vector < double > ();
    muon_offline_z0                    = new vector < double > ();
    muon_offline_charge                = new vector < double > ();
    muon_n_offlineSegment              = new vector < int > ();
    muon_offlineSegment_x              = new vector < vector < double > > ();
    muon_offlineSegment_y              = new vector < vector < double > > ();
    muon_offlineSegment_z              = new vector < vector < double > > ();
    muon_offlineSegment_px             = new vector < vector < double > > ();
    muon_offlineSegment_py             = new vector < vector < double > > ();
    muon_offlineSegment_pz             = new vector < vector < double > > ();
    muon_offlineSegment_chiSquared     = new vector < vector < double > > ();
    muon_offlineSegment_NumberDoF      = new vector < vector < double > > ();
    muon_offlineSegment_sector         = new vector < vector < double > > ();
    muon_offlineSegment_chamberIndex   = new vector < vector < double > > ();
    muon_offlineSegment_etaIndex       = new vector < vector < double > > ();
    muon_offlineSegment_nPrecisionHits = new vector < vector < double > > ();
    muon_offlineSegment_NPhiLayers     = new vector < vector < double > > ();
    muon_offlineSegment_NTrigEtaLayers = new vector < vector < double > > ();
    muon_EFTAG_pass                    = new vector < int > ();
    muon_EFTAG_pt                      = new vector < double > ();
    muon_EFTAG_eta                     = new vector < double > ();
    muon_EFTAG_phi                     = new vector < double > ();
    muon_L1_pass                       = new vector < int > ();
    muon_L1_pt                         = new vector < double > ();
    muon_L1_eta                        = new vector < double > ();
    muon_L1_phi                        = new vector < double > ();
    muon_L1_RoINumber                  = new vector < int > ();
    muon_L1_RoISector                  = new vector < int > ();
    muon_SA_HypoPass                   = new vector < int > ();
    muon_SA_OvRmPass                   = new vector < bool > ();
    muon_SA_pt                         = new vector < double > ();
    muon_SA_eta                        = new vector < double > ();
    muon_SA_phi                        = new vector < double > ();
    muon_SA_etaMS                      = new vector < double > ();
    muon_SA_etaBE                      = new vector < double > ();
    muon_SA_phiMS                      = new vector < double > ();
    muon_SA_phiBE                      = new vector < double > ();
    muon_SA_TGCpt                      = new vector < double > ();
    muon_SA_ptBarrelRadius             = new vector < double > ();
    muon_SA_ptBarrelSagitta            = new vector < double > ();
    muon_SA_ptEndcapAlpha              = new vector < double > ();
    muon_SA_ptEndcapBeta               = new vector < double > ();
    muon_SA_ptEndcapRadius             = new vector < double > ();
    muon_SA_CSCpt                      = new vector < double > ();
    muon_SA_sAddress                   = new vector < double > ();
    muon_SA_SP_rBI                     = new vector < double > ();
    muon_SA_SP_rBM                     = new vector < double > ();
    muon_SA_SP_rBO                     = new vector < double > ();
    muon_SA_SP_rEI                     = new vector < double > ();
    muon_SA_SP_rEM                     = new vector < double > ();
    muon_SA_SP_rEO                     = new vector < double > ();
    muon_SA_SP_rEE                     = new vector < double > ();
    muon_SA_SP_rCSC                    = new vector < double > ();
    muon_SA_SP_rBEE                    = new vector < double > ();
    muon_SA_SP_rBME                    = new vector < double > ();
    muon_SA_SP_zBI                     = new vector < double > ();
    muon_SA_SP_zBM                     = new vector < double > ();
    muon_SA_SP_zBO                     = new vector < double > ();
    muon_SA_SP_zEI                     = new vector < double > ();
    muon_SA_SP_zEM                     = new vector < double > ();
    muon_SA_SP_zEO                     = new vector < double > ();
    muon_SA_SP_zEE                     = new vector < double > ();
    muon_SA_SP_zCSC                    = new vector < double > ();
    muon_SA_SP_zBEE                    = new vector < double > ();
    muon_SA_SP_zBME                    = new vector < double > ();
    muon_SA_SP_slopeBI                 = new vector < double > ();
    muon_SA_SP_slopeBM                 = new vector < double > ();
    muon_SA_SP_slopeBO                 = new vector < double > ();
    muon_SA_SP_slopeEI                 = new vector < double > ();
    muon_SA_SP_slopeEM                 = new vector < double > ();
    muon_SA_SP_slopeEO                 = new vector < double > ();
    muon_SA_SP_slopeEE                 = new vector < double > ();
    muon_SA_SP_slopeCSC                = new vector < double > ();
    muon_SA_SP_slopeBEE                = new vector < double > ();
    muon_SA_SP_slopeBME                = new vector < double > ();
    muon_SA_SP_interceptBI             = new vector < double > ();
    muon_SA_SP_interceptBM             = new vector < double > ();
    muon_SA_SP_interceptBO             = new vector < double > ();
    muon_SA_SP_interceptEI             = new vector < double > ();
    muon_SA_SP_interceptEM             = new vector < double > ();
    muon_SA_SP_interceptEO             = new vector < double > ();
    muon_SA_SP_interceptEE             = new vector < double > ();
    muon_SA_SP_interceptCSC            = new vector < double > ();
    muon_SA_SP_interceptBEE            = new vector < double > ();
    muon_SA_SP_interceptBME            = new vector < double > ();
    muon_SA_SP_chi2BI                  = new vector < double > ();
    muon_SA_SP_chi2BM                  = new vector < double > ();
    muon_SA_SP_chi2BO                  = new vector < double > ();
    muon_SA_SP_chi2EI                  = new vector < double > ();
    muon_SA_SP_chi2EM                  = new vector < double > ();
    muon_SA_SP_chi2EO                  = new vector < double > ();
    muon_SA_SP_chi2EE                  = new vector < double > ();
    muon_SA_SP_chi2CSC                 = new vector < double > ();
    muon_SA_SP_chi2BEE                 = new vector < double > ();
    muon_SA_SP_chi2BME                 = new vector < double > ();
    muon_SA_RoIEta                     = new vector < float > ();
    muon_SA_RoIPhi                     = new vector < float > ();
    muon_SA_isRPCFailure               = new vector < double > ();
    muon_SA_isTGCFailure               = new vector < double > ();
    muon_SA_BarrelRadius               = new vector < double > ();
    muon_SA_BarrelSagitta              = new vector < double > ();
    muon_SA_EtaMap                     = new vector < double > ();
    muon_SA_PhiMap                     = new vector < double > ();
    muon_SA_RoINumber                  = new vector < uint32_t > ();
    muon_SA_RoISector                  = new vector < uint32_t > ();
    muon_SA_RPCHit_x                   = new vector < vector < float > > ();
    muon_SA_RPCHit_y                   = new vector < vector < float > > ();
    muon_SA_RPCHit_z                   = new vector < vector < float > > ();
    muon_SA_RPCHit_r                   = new vector < vector < double > > ();
    muon_SA_RPCHit_eta                 = new vector < vector < double > > ();
    muon_SA_RPCHit_phi                 = new vector < vector < double > > ();
    muon_SA_RPCHit_measuresPhi         = new vector < vector < uint32_t > > ();
    muon_SA_RPCHit_stationName         = new vector < vector < string > > ();
    muon_SA_RPCHit_stationNumber       = new vector < vector < double > > ();
    muon_SA_RPCFit_innPhi              = new vector < float > ();
    muon_SA_RPCFit_innSlope            = new vector < float > ();
    muon_SA_RPCFit_innOffset           = new vector < float > ();
    muon_SA_RPCFit_midPhi              = new vector < float > ();
    muon_SA_RPCFit_midSlope            = new vector < float > ();
    muon_SA_RPCFit_midOffset           = new vector < float > ();
    muon_SA_RPCFit_outPhi              = new vector < float > ();
    muon_SA_RPCFit_outSlope            = new vector < float > ();
    muon_SA_RPCFit_outOffset           = new vector < float > ();
    muon_SA_roadAw                     = new vector < vector < float > > ();
    muon_SA_roadBw                     = new vector < vector < float > > ();
    muon_SA_zMin                       = new vector < vector < float > > ();
    muon_SA_zMax                       = new vector < vector < float > > ();
    muon_SA_rMin                       = new vector < vector < float > > ();
    muon_SA_rMax                       = new vector < vector < float > > ();
    muon_SA_etaMin                     = new vector < vector < float > > ();
    muon_SA_etaMax                     = new vector < vector < float > > ();
    muon_SA_MDTHit_isOutlier           = new vector < vector < int > > ();
    muon_SA_MDTHit_chamber             = new vector < vector < int > > ();
    muon_SA_MDTHit_r                   = new vector < vector < float > > ();
    muon_SA_MDTHit_z                   = new vector < vector < float > > ();
    muon_SA_MDTHit_phi                 = new vector < vector < float > > ();
    muon_SA_MDTHit_residual            = new vector < vector < float > > ();
    muon_SA_MDTHit_space               = new vector < vector < float > > ();
    muon_SA_MDTHit_sigma               = new vector < vector < float > > ();
    muon_CB_HypoPass                   = new vector < int > ();
    muon_CB_OvRmPass                   = new vector < bool > ();
    muon_CB_pt                         = new vector < double > ();
    muon_CB_eta                        = new vector < double > ();
    muon_CB_phi                        = new vector < double > ();
    muon_EF_pass                       = new vector < int > ();
    muon_EF_pt                         = new vector < double > ();
    muon_EF_eta                        = new vector < double > ();
    muon_EF_phi                        = new vector < double > ();
  //
  //--------------------------------------------------
  // BRANCH SET UP
  //--------------------------------------------------

    m_tree->Branch( "EventNumber",                    &EventNumber );
    m_tree->Branch( "RunNumber",                      &RunNumber );
    m_tree->Branch( "LumiBlock",                      &LumiBlock );
    m_tree->Branch( "AverageInteractionsPerCrossing", &AverageInteractionsPerCrossing );
    m_tree->Branch( "mes_name",                       &mes_name );
    m_tree->Branch( "nMuon",                          &n_muon);
    m_tree->Branch( "OfflinePt",                      &muon_offline_pt );
    m_tree->Branch( "OfflineEta",                     &muon_offline_eta );
    m_tree->Branch( "OfflineExtEta",                  &muon_offline_exteta );
    m_tree->Branch( "OfflineExtInnEta",               &muon_offline_extinneta );
    m_tree->Branch( "OfflinePhi",                     &muon_offline_phi );
    m_tree->Branch( "OfflineExtPhi",                  &muon_offline_extphi );
    m_tree->Branch( "OfflineExtInnPhi",               &muon_offline_extinnphi );
    m_tree->Branch( "OfflineD0",                      &muon_offline_d0 );
    m_tree->Branch( "OfflineZ0",                      &muon_offline_z0 );
    m_tree->Branch( "OfflineCharge",                  &muon_offline_charge );
    m_tree->Branch( "OfflineNumSegment",              &muon_n_offlineSegment );
    m_tree->Branch( "OfflineSegmentX",                &muon_offlineSegment_x );
    m_tree->Branch( "OfflineSegmentY",                &muon_offlineSegment_y );
    m_tree->Branch( "OfflineSegmentZ",                &muon_offlineSegment_z );
    m_tree->Branch( "OfflineSegmentPx",               &muon_offlineSegment_px );
    m_tree->Branch( "OfflineSegmentPy",               &muon_offlineSegment_py );
    m_tree->Branch( "OfflineSegmentPz",               &muon_offlineSegment_pz );
    m_tree->Branch( "OfflineSegmentChiSquared",       &muon_offlineSegment_chiSquared );
    m_tree->Branch( "OfflineSegmentNumberDoF",        &muon_offlineSegment_NumberDoF );
    m_tree->Branch( "OfflineSegmentSector",           &muon_offlineSegment_sector );
    m_tree->Branch( "OfflineSegmentChamberIndex",     &muon_offlineSegment_chamberIndex );
    m_tree->Branch( "OfflineSegmentEtaIndex",         &muon_offlineSegment_etaIndex );
    m_tree->Branch( "OfflineSegmentNPrecisionHits",   &muon_offlineSegment_nPrecisionHits );
    m_tree->Branch( "OfflineSegmentNPhiLayers",       &muon_offlineSegment_NPhiLayers );
    m_tree->Branch( "OfflineSegmentNTrigEtaLayers",   &muon_offlineSegment_NTrigEtaLayers );
    m_tree->Branch( "EFTAGPass",                      &muon_EFTAG_pass );
    m_tree->Branch( "EFTAGPt",                        &muon_EFTAG_pt );
    m_tree->Branch( "EFTAGEta",                       &muon_EFTAG_eta );
    m_tree->Branch( "EFTAGPhi",                       &muon_EFTAG_phi );
    m_tree->Branch( "L1Pass",                         &muon_L1_pass );
    m_tree->Branch( "L1Pt",                           &muon_L1_pt );
    m_tree->Branch( "L1Eta",                          &muon_L1_eta );
    m_tree->Branch( "L1Phi",                          &muon_L1_phi );
    m_tree->Branch( "L1RoINumber",                    &muon_L1_RoINumber );
    m_tree->Branch( "L1RoISector",                    &muon_L1_RoISector );
    m_tree->Branch( "SAHypoPass",                     &muon_SA_HypoPass );
    m_tree->Branch( "SAOvRmPass",                     &muon_SA_OvRmPass );
    m_tree->Branch( "SAPt",                           &muon_SA_pt );
    m_tree->Branch( "SAEta",                          &muon_SA_eta );
    m_tree->Branch( "SAPhi",                          &muon_SA_phi );
    m_tree->Branch( "SAEtaMS",                        &muon_SA_etaMS );
    m_tree->Branch( "SAEtaBE",                        &muon_SA_etaBE );
    m_tree->Branch( "SAPhiMS",                        &muon_SA_phiMS );
    m_tree->Branch( "SAPhiBE",                        &muon_SA_phiBE );
    m_tree->Branch( "SATGCPt",                        &muon_SA_TGCpt );
    m_tree->Branch( "SAPtBarrelRadius",               &muon_SA_ptBarrelRadius );
    m_tree->Branch( "SAPtBarrelSagitta",              &muon_SA_ptBarrelSagitta );
    m_tree->Branch( "SAPtEndcapAlpha",                &muon_SA_ptEndcapAlpha );
    m_tree->Branch( "SAPtEndcapBeta",                 &muon_SA_ptEndcapBeta );
    m_tree->Branch( "SAPtEndcapRadius",               &muon_SA_ptEndcapRadius );
    m_tree->Branch( "SACSCPt",                        &muon_SA_CSCpt );
    m_tree->Branch( "SAsAddress",                     &muon_SA_sAddress );
    m_tree->Branch( "SASPR_BI",                       &muon_SA_SP_rBI );
    m_tree->Branch( "SASPR_BM",                       &muon_SA_SP_rBM );
    m_tree->Branch( "SASPR_BO",                       &muon_SA_SP_rBO );
    m_tree->Branch( "SASPR_EI",                       &muon_SA_SP_rEI );
    m_tree->Branch( "SASPR_EM",                       &muon_SA_SP_rEM );
    m_tree->Branch( "SASPR_EO",                       &muon_SA_SP_rEO );
    m_tree->Branch( "SASPR_EE",                       &muon_SA_SP_rEE );
    m_tree->Branch( "SASPR_CSC",                      &muon_SA_SP_rCSC );
    m_tree->Branch( "SASPR_BEE",                      &muon_SA_SP_rBEE );
    m_tree->Branch( "SASPR_BME",                      &muon_SA_SP_rBME );
    m_tree->Branch( "SASPZ_BI",                       &muon_SA_SP_zBI );
    m_tree->Branch( "SASPZ_BM",                       &muon_SA_SP_zBM );
    m_tree->Branch( "SASPZ_BO",                       &muon_SA_SP_zBO );
    m_tree->Branch( "SASPZ_EI",                       &muon_SA_SP_zEI );
    m_tree->Branch( "SASPZ_EM",                       &muon_SA_SP_zEM );
    m_tree->Branch( "SASPZ_EO",                       &muon_SA_SP_zEO );
    m_tree->Branch( "SASPZ_EE",                       &muon_SA_SP_zEE );
    m_tree->Branch( "SASPZ_CSC",                      &muon_SA_SP_zCSC );
    m_tree->Branch( "SASPZ_BEE",                      &muon_SA_SP_zBEE );
    m_tree->Branch( "SASPZ_BME",                      &muon_SA_SP_zBME );
    m_tree->Branch( "SASPSlope_BI",                   &muon_SA_SP_slopeBI );
    m_tree->Branch( "SASPSlope_BM",                   &muon_SA_SP_slopeBM );
    m_tree->Branch( "SASPSlope_BO",                   &muon_SA_SP_slopeBO );
    m_tree->Branch( "SASPSlope_EI",                   &muon_SA_SP_slopeEI );
    m_tree->Branch( "SASPSlope_EM",                   &muon_SA_SP_slopeEM );
    m_tree->Branch( "SASPSlope_EO",                   &muon_SA_SP_slopeEO );
    m_tree->Branch( "SASPSlope_EE",                   &muon_SA_SP_slopeEE );
    m_tree->Branch( "SASPSlope_CSC",                  &muon_SA_SP_slopeCSC );
    m_tree->Branch( "SASPSlope_BEE",                  &muon_SA_SP_slopeBEE );
    m_tree->Branch( "SASPSlope_BME",                  &muon_SA_SP_slopeBME );
    m_tree->Branch( "SASPIntercept_BI",               &muon_SA_SP_interceptBI );
    m_tree->Branch( "SASPIntercept_BM",               &muon_SA_SP_interceptBM );
    m_tree->Branch( "SASPIntercept_BO",               &muon_SA_SP_interceptBO );
    m_tree->Branch( "SASPIntercept_EI",               &muon_SA_SP_interceptEI );
    m_tree->Branch( "SASPIntercept_EM",               &muon_SA_SP_interceptEM );
    m_tree->Branch( "SASPIntercept_EO",               &muon_SA_SP_interceptEO );
    m_tree->Branch( "SASPIntercept_EE",               &muon_SA_SP_interceptEE );
    m_tree->Branch( "SASPIntercept_CSC",              &muon_SA_SP_interceptCSC );
    m_tree->Branch( "SASPIntercept_BEE",              &muon_SA_SP_interceptBEE );
    m_tree->Branch( "SASPIntercept_BME",              &muon_SA_SP_interceptBME );
    m_tree->Branch( "SASPChi2_BI",                    &muon_SA_SP_chi2BI );
    m_tree->Branch( "SASPChi2_BM",                    &muon_SA_SP_chi2BM );
    m_tree->Branch( "SASPChi2_BO",                    &muon_SA_SP_chi2BO );
    m_tree->Branch( "SASPChi2_EI",                    &muon_SA_SP_chi2EI );
    m_tree->Branch( "SASPChi2_EM",                    &muon_SA_SP_chi2EM );
    m_tree->Branch( "SASPChi2_EO",                    &muon_SA_SP_chi2EO );
    m_tree->Branch( "SASPChi2_EE",                    &muon_SA_SP_chi2EE );
    m_tree->Branch( "SASPChi2_CSC",                   &muon_SA_SP_chi2CSC );
    m_tree->Branch( "SASPChi2_BEE",                   &muon_SA_SP_chi2BEE );
    m_tree->Branch( "SASPChi2_BME",                   &muon_SA_SP_chi2BME );
    m_tree->Branch( "SARoIEta",                       &muon_SA_RoIEta );
    m_tree->Branch( "SARoIPhi",                       &muon_SA_RoIPhi );
    m_tree->Branch( "SAisRPCFailure",                 &muon_SA_isRPCFailure );
    m_tree->Branch( "SAisTGCFailure",                 &muon_SA_isTGCFailure );
    m_tree->Branch( "SABarrelRadius",                 &muon_SA_BarrelRadius );
    m_tree->Branch( "SABarrelSagitta",                &muon_SA_BarrelSagitta );
    m_tree->Branch( "SAEtaMap",                       &muon_SA_EtaMap );
    m_tree->Branch( "SAPhiMap",                       &muon_SA_PhiMap );
    m_tree->Branch( "SARoINumber",                    &muon_SA_RoINumber );
    m_tree->Branch( "SARoISector",                    &muon_SA_RoISector );
    m_tree->Branch( "SARPCHitX",                      &muon_SA_RPCHit_x );
    m_tree->Branch( "SARPCHitY",                      &muon_SA_RPCHit_y );
    m_tree->Branch( "SARPCHitZ",                      &muon_SA_RPCHit_z );
    m_tree->Branch( "SARPCHitR",                      &muon_SA_RPCHit_r );
    m_tree->Branch( "SARPCHitEta",                    &muon_SA_RPCHit_eta );
    m_tree->Branch( "SARPCHitPhi",                    &muon_SA_RPCHit_phi );
    m_tree->Branch( "SARPCHitMeasuresPhi",            &muon_SA_RPCHit_measuresPhi );
    m_tree->Branch( "SARPCHitStationName",            &muon_SA_RPCHit_stationName );
    m_tree->Branch( "SARPCHitStationNumber",          &muon_SA_RPCHit_stationNumber );
    m_tree->Branch( "SARPCFitInnPhi",                 &muon_SA_RPCFit_innPhi );
    m_tree->Branch( "SARPCFitInnSlope",               &muon_SA_RPCFit_innSlope );
    m_tree->Branch( "SARPCFitInnOffset",              &muon_SA_RPCFit_innOffset );
    m_tree->Branch( "SARPCFitMidPhi",                 &muon_SA_RPCFit_midPhi );
    m_tree->Branch( "SARPCFitMidSlope",               &muon_SA_RPCFit_midSlope );
    m_tree->Branch( "SARPCFitMidOffset",              &muon_SA_RPCFit_midOffset );
    m_tree->Branch( "SARPCFitOutPhi",                 &muon_SA_RPCFit_outPhi );
    m_tree->Branch( "SARPCFitOutSlope",               &muon_SA_RPCFit_outSlope );
    m_tree->Branch( "SARPCFitOutOffset",              &muon_SA_RPCFit_outOffset );
    m_tree->Branch( "SARoadAw",                       &muon_SA_roadAw );
    m_tree->Branch( "SARoadBw",                       &muon_SA_roadBw );
    m_tree->Branch( "SAzMin",                         &muon_SA_zMin );
    m_tree->Branch( "SAzMax",                         &muon_SA_zMax );
    m_tree->Branch( "SArMin",                         &muon_SA_rMin );
    m_tree->Branch( "SArMax",                         &muon_SA_rMax );
    m_tree->Branch( "SAEtaMin",                       &muon_SA_etaMin );
    m_tree->Branch( "SAEtaMax",                       &muon_SA_etaMax );
    m_tree->Branch( "SAMDTHitisOutlier",              &muon_SA_MDTHit_isOutlier );
    m_tree->Branch( "SAMDTHitChamber",                &muon_SA_MDTHit_chamber );
    m_tree->Branch( "SAMDTHitR",                      &muon_SA_MDTHit_r );
    m_tree->Branch( "SAMDTHitZ",                      &muon_SA_MDTHit_z );
    m_tree->Branch( "SAMDTHitPhi",                    &muon_SA_MDTHit_phi );
    m_tree->Branch( "SAMDTHitResidual",               &muon_SA_MDTHit_residual );
    m_tree->Branch( "SAMDTHitSpace",                  &muon_SA_MDTHit_space );
    m_tree->Branch( "SAMDTHitSigma",                  &muon_SA_MDTHit_sigma );
    m_tree->Branch( "CBHypoPass",                     &muon_CB_HypoPass );
    m_tree->Branch( "CBOvRmPass",                     &muon_CB_OvRmPass );
    m_tree->Branch( "CBPt",                           &muon_CB_pt );
    m_tree->Branch( "CBEta",                          &muon_CB_eta );
    m_tree->Branch( "CBPhi",                          &muon_CB_phi );
    m_tree->Branch( "EFPass",                         &muon_EF_pass );
    m_tree->Branch( "EFPt",                           &muon_EF_pt );
    m_tree->Branch( "EFEta",                          &muon_EF_eta );
    m_tree->Branch( "EFPhi",                          &muon_EF_phi );
}

int EventTreeFCBM::clear( ) {
	// clear the vector for branch
    //mes_name->clear();
	return 1;
}

int EventTreeFCBM::filltree( MuInfoGetter& mig, unsigned long long int eventNumber, int runNumber, int lumiBlock, float averageInteractionsPerCrossing) {
    // fill the variable vectors
    EventNumber                                                         = eventNumber;
    RunNumber                                                           = runNumber;
    LumiBlock                                                           = lumiBlock;
    AverageInteractionsPerCrossing                                      = averageInteractionsPerCrossing;
    mes_name                                                            = mig.mesName();
    //n_muon                                                              = mig.nMuon();
    //2step substitution
    vector < double > tmp_muon_offline_pt                               = mig.muonOfflinePt();
    muon_offline_pt                                                     = &( tmp_muon_offline_pt );
    n_muon                                                              = tmp_muon_offline_pt.size();
    vector < double > tmp_muon_offline_eta                              = mig.muonOfflineEta();
    muon_offline_eta                                                    = &( tmp_muon_offline_eta );
    vector < double > tmp_muon_offline_exteta                           = mig.muonOfflineExtEta();
    muon_offline_exteta                                                 = &( tmp_muon_offline_exteta );
    vector < double > tmp_muon_offline_extinneta                        = mig.muonOfflineExtInnEta();
    muon_offline_extinneta                                              = &( tmp_muon_offline_extinneta );
    vector < double > tmp_muon_offline_phi                              = mig.muonOfflinePhi();
    muon_offline_phi                                                    = &( tmp_muon_offline_phi );
    vector < double > tmp_muon_offline_extphi                           = mig.muonOfflineExtPhi();
    muon_offline_extphi                                                 = &( tmp_muon_offline_extphi );
    vector < double > tmp_muon_offline_extinnphi                        = mig.muonOfflineExtInnPhi();
    muon_offline_extinnphi                                              = &( tmp_muon_offline_extinnphi );
    vector < double > tmp_muon_offline_d0                               = mig.muonOfflineD0();
    muon_offline_d0                                                     = &( tmp_muon_offline_d0 );
    vector < double > tmp_muon_offline_z0                               = mig.muonOfflineZ0();
    muon_offline_z0                                                     = &( tmp_muon_offline_z0 );
    vector < double > tmp_muon_offline_charge                           = mig.muonOfflineCharge();
    muon_offline_charge                                                 = &( tmp_muon_offline_charge );
    vector < int > tmp_muon_n_offlineSegment                            = mig.muonOfflineSegmentN();
    muon_n_offlineSegment                                               = &( tmp_muon_n_offlineSegment );
    vector < vector < double > > tmp_muon_offlineSegment_x              = mig.muonOfflineSegmentX();
    muon_offlineSegment_x                                               = &( tmp_muon_offlineSegment_x );
    vector < vector < double > > tmp_muon_offlineSegment_y              = mig.muonOfflineSegmentY();
    muon_offlineSegment_y                                               = &( tmp_muon_offlineSegment_y );
    vector < vector < double > > tmp_muon_offlineSegment_z              = mig.muonOfflineSegmentZ();
    muon_offlineSegment_z                                               = &( tmp_muon_offlineSegment_z );
    vector < vector < double > > tmp_muon_offlineSegment_px             = mig.muonOfflineSegmentPx();
    muon_offlineSegment_px                                              = &( tmp_muon_offlineSegment_px );
    vector < vector < double > > tmp_muon_offlineSegment_py             = mig.muonOfflineSegmentPy();
    muon_offlineSegment_py                                              = &( tmp_muon_offlineSegment_py );
    vector < vector < double > > tmp_muon_offlineSegment_pz             = mig.muonOfflineSegmentPz();
    muon_offlineSegment_pz                                              = &( tmp_muon_offlineSegment_pz );
    vector < vector < double > > tmp_muon_offlineSegment_chiSquared     = mig.muonOfflineSegmentChiSquared();
    muon_offlineSegment_chiSquared                                      = &( tmp_muon_offlineSegment_chiSquared );
    vector < vector < double > > tmp_muon_offlineSegment_NumberDoF      = mig.muonOfflineSegmentNumberDoF();
    muon_offlineSegment_NumberDoF                                       = &( tmp_muon_offlineSegment_NumberDoF );
    vector < vector < double > > tmp_muon_offlineSegment_sector         = mig.muonOfflineSegmentSector();
    muon_offlineSegment_sector                                          = &( tmp_muon_offlineSegment_sector );
    vector < vector < double > > tmp_muon_offlineSegment_chamberIndex   = mig.muonOfflineSegmentChamberIndex();
    muon_offlineSegment_chamberIndex                                    = &( tmp_muon_offlineSegment_chamberIndex );
    vector < vector < double > > tmp_muon_offlineSegment_etaIndex       = mig.muonOfflineSegmentEtaIndex();
    muon_offlineSegment_etaIndex                                        = &( tmp_muon_offlineSegment_etaIndex );
    vector < vector < double > > tmp_muon_offlineSegment_nPrecisionHits = mig.muonOfflineSegmentNPrecisionHits();
    muon_offlineSegment_nPrecisionHits                                  = &( tmp_muon_offlineSegment_nPrecisionHits );
    vector < vector < double > > tmp_muon_offlineSegment_NPhiLayers     = mig.muonOfflineSegmentNPhiLayers();
    muon_offlineSegment_NPhiLayers                                      = &( tmp_muon_offlineSegment_NPhiLayers );
    vector < vector < double > > tmp_muon_offlineSegment_NTrigEtaLayers = mig.muonOfflineSegmentNTrigEtaLayers();
    muon_offlineSegment_NTrigEtaLayers                                  = &( tmp_muon_offlineSegment_NTrigEtaLayers );
    vector < int > tmp_muon_EFTAG_pass                                  = mig.muonEFTAGPass();
    muon_EFTAG_pass                                                     = &( tmp_muon_EFTAG_pass );
    vector < double > tmp_muon_EFTAG_pt                                 = mig.muonEFTAGPt();
    muon_EFTAG_pt                                                       = &( tmp_muon_EFTAG_pt );
    vector < double > tmp_muon_EFTAG_eta                                = mig.muonEFTAGEta();
    muon_EFTAG_eta                                                      = &( tmp_muon_EFTAG_eta );
    vector < double > tmp_muon_EFTAG_phi                                = mig.muonEFTAGPhi();
    muon_EFTAG_phi                                                      = &( tmp_muon_EFTAG_phi );
    vector < int > tmp_muon_L1_pass                                     = mig.muonL1Pass();
    muon_L1_pass                                                        = &( tmp_muon_L1_pass );
    vector <double > tmp_muon_L1_pt                                     = mig.muonL1Pt();
    muon_L1_pt                                                          = & ( tmp_muon_L1_pt );
    vector < double > tmp_muon_L1_eta                                   = mig.muonL1Eta();
    muon_L1_eta                                                         = &( tmp_muon_L1_eta );
    vector < double > tmp_muon_L1_phi                                   = mig.muonL1Phi();
    muon_L1_phi                                                         = &( tmp_muon_L1_phi );
    vector < int > tmp_muon_L1_RoINumber                                = mig.muonL1roiNumber();
    muon_L1_RoINumber                                                   = &( tmp_muon_L1_RoINumber );
    vector < int > tmp_muon_L1_RoISector                                = mig.muonL1roiSector();
    muon_L1_RoISector                                                   = &( tmp_muon_L1_RoISector );
    vector < int > tmp_muon_SA_HypoPass                                 = mig.muonSAHypoPass();
    muon_SA_HypoPass                                                    = &( tmp_muon_SA_HypoPass );
    vector < bool > tmp_muon_SA_OvRmPass                                = mig.muonSAOvRmPass();
    muon_SA_OvRmPass                                                    = &( tmp_muon_SA_OvRmPass );
    vector < double > tmp_muon_SA_pt                                    = mig.muonSAPt();
    muon_SA_pt                                                          = &( tmp_muon_SA_pt );
    vector < double > tmp_muon_SA_eta                                   = mig.muonSAEta();
    muon_SA_eta                                                         = &( tmp_muon_SA_eta );
    vector < double > tmp_muon_SA_phi                                   = mig.muonSAPhi();
    muon_SA_phi                                                         = &( tmp_muon_SA_phi );
    vector < double > tmp_muon_SA_etaMS                                 = mig.muonSAEtaMS();
    muon_SA_etaMS                                                       = &( tmp_muon_SA_etaMS );
    vector < double > tmp_muon_SA_phiMS                                 = mig.muonSAPhiMS();
    muon_SA_phiMS                                                       = &( tmp_muon_SA_phiMS );
    vector < double > tmp_muon_SA_etaBE                                 = mig.muonSAEtaBE();
    muon_SA_etaBE                                                       = &( tmp_muon_SA_etaBE );
    vector < double > tmp_muon_SA_phiBE                                 = mig.muonSAPhiBE();
    muon_SA_phiBE                                                       = &( tmp_muon_SA_phiBE );
    vector < double > tmp_muon_SA_TGCpt                                 = mig.muonSAtgcPt();
    muon_SA_TGCpt                                                       = &( tmp_muon_SA_TGCpt );
    vector < double > tmp_muon_SA_ptBarrelRadius                        = mig.muonSAPtBarrelRadius();
    muon_SA_ptBarrelRadius                                              = &( tmp_muon_SA_ptBarrelRadius );
    vector < double > tmp_muon_SA_ptBarrelSagitta                       = mig.muonSAPtBarrelSagitta();
    muon_SA_ptBarrelSagitta                                             = &( tmp_muon_SA_ptBarrelSagitta );
    vector < double > tmp_muon_SA_ptEndcapAlpha                         = mig.muonSAPtEndcapAlpha();
    muon_SA_ptEndcapAlpha                                               = &( tmp_muon_SA_ptEndcapAlpha );
    vector < double > tmp_muon_SA_ptEndcapBeta                          = mig.muonSAPtEndcapBeta();
    muon_SA_ptEndcapBeta                                                = &( tmp_muon_SA_ptEndcapBeta );
    vector < double > tmp_muon_SA_ptEndcapRadius                        = mig.muonSAPtEndcapRadius();
    muon_SA_ptEndcapRadius                                              = &( tmp_muon_SA_ptEndcapRadius );
    vector < double > tmp_muon_SA_CSCpt                                 = mig.muonSAcscPt();
    muon_SA_CSCpt                                                       = &( tmp_muon_SA_CSCpt );
    vector < double > tmp_muon_SA_sAddress                              = mig.muonSAsAddress();
    muon_SA_sAddress                                                    = &( tmp_muon_SA_sAddress );
    vector < double > tmp_muon_SA_SP_rBI                                = mig.muonSASuperPointRBI();
    muon_SA_SP_rBI                                                      = &( tmp_muon_SA_SP_rBI );
    vector < double > tmp_muon_SA_SP_rBM                                = mig.muonSASuperPointRBM();
    muon_SA_SP_rBM                                                      = &( tmp_muon_SA_SP_rBM );
    vector < double > tmp_muon_SA_SP_rBO                                = mig.muonSASuperPointRBO();
    muon_SA_SP_rBO                                                      = &( tmp_muon_SA_SP_rBO );
    vector < double > tmp_muon_SA_SP_rEI                                = mig.muonSASuperPointREI();
    muon_SA_SP_rEI                                                      = &( tmp_muon_SA_SP_rEI );
    vector < double > tmp_muon_SA_SP_rEM                                = mig.muonSASuperPointREM();
    muon_SA_SP_rEM                                                      = &( tmp_muon_SA_SP_rEM);
    vector < double > tmp_muon_SA_SP_rEO                                = mig.muonSASuperPointREO();
    muon_SA_SP_rEO                                                      = &( tmp_muon_SA_SP_rEO );
    vector < double > tmp_muon_SA_SP_rEE                                = mig.muonSASuperPointREE();
    muon_SA_SP_rEE                                                      = &( tmp_muon_SA_SP_rEE );
    vector < double > tmp_muon_SA_SP_rCSC                               = mig.muonSASuperPointRCSC();
    muon_SA_SP_rCSC                                                     = &( tmp_muon_SA_SP_rCSC);
    vector < double > tmp_muon_SA_SP_rBEE                               = mig.muonSASuperPointRBEE();
    muon_SA_SP_rBEE                                                     = &( tmp_muon_SA_SP_rBEE );
    vector < double > tmp_muon_SA_SP_rBME                               = mig.muonSASuperPointRBME();
    muon_SA_SP_rBME                                                     = &( tmp_muon_SA_SP_rBME );
    vector < double > tmp_muon_SA_SP_zBI                                = mig.muonSASuperPointZBI();
    muon_SA_SP_zBI                                                      = &( tmp_muon_SA_SP_zBI );
    vector < double > tmp_muon_SA_SP_zBM                                = mig.muonSASuperPointZBM();
    muon_SA_SP_zBM                                                      = &( tmp_muon_SA_SP_zBM );
    vector < double > tmp_muon_SA_SP_zBO                                = mig.muonSASuperPointZBO();
    muon_SA_SP_zBO                                                      = &( tmp_muon_SA_SP_zBO );
    vector < double > tmp_muon_SA_SP_zEI                                = mig.muonSASuperPointZEI();
    muon_SA_SP_zEI                                                      = &( tmp_muon_SA_SP_zEI );
    vector < double > tmp_muon_SA_SP_zEM                                = mig.muonSASuperPointZEM();
    muon_SA_SP_zEM                                                      = &( tmp_muon_SA_SP_zEM);
    vector < double > tmp_muon_SA_SP_zEO                                = mig.muonSASuperPointZEO();
    muon_SA_SP_zEO                                                      = &( tmp_muon_SA_SP_zEO );
    vector < double > tmp_muon_SA_SP_zEE                                = mig.muonSASuperPointZEE();
    muon_SA_SP_zEE                                                      = &( tmp_muon_SA_SP_zEE );
    vector < double > tmp_muon_SA_SP_zCSC                               = mig.muonSASuperPointZCSC();
    muon_SA_SP_zCSC                                                     = &( tmp_muon_SA_SP_zCSC);
    vector < double > tmp_muon_SA_SP_zBEE                               = mig.muonSASuperPointZBEE();
    muon_SA_SP_zBEE                                                     = &( tmp_muon_SA_SP_zBEE );
    vector < double > tmp_muon_SA_SP_zBME                               = mig.muonSASuperPointZBME();
    muon_SA_SP_zBME                                                     = &( tmp_muon_SA_SP_zBME );
    vector < double > tmp_muon_SA_SP_slopeBI                            = mig.muonSASuperPointSlopeBI();
    muon_SA_SP_slopeBI                                                  = &( tmp_muon_SA_SP_slopeBI );
    vector < double > tmp_muon_SA_SP_slopeBM                            = mig.muonSASuperPointSlopeBM();
    muon_SA_SP_slopeBM                                                  = &( tmp_muon_SA_SP_slopeBM );
    vector < double > tmp_muon_SA_SP_slopeBO                            = mig.muonSASuperPointSlopeBO();
    muon_SA_SP_slopeBO                                                  = &( tmp_muon_SA_SP_slopeBO );
    vector < double > tmp_muon_SA_SP_slopeEI                            = mig.muonSASuperPointSlopeEI();
    muon_SA_SP_slopeEI                                                  = &( tmp_muon_SA_SP_slopeEI );
    vector < double > tmp_muon_SA_SP_slopeEM                            = mig.muonSASuperPointSlopeEM();
    muon_SA_SP_slopeEM                                                  = &( tmp_muon_SA_SP_slopeEM);
    vector < double > tmp_muon_SA_SP_slopeEO                            = mig.muonSASuperPointSlopeEO();
    muon_SA_SP_slopeEO                                                  = &( tmp_muon_SA_SP_slopeEO );
    vector < double > tmp_muon_SA_SP_slopeEE                            = mig.muonSASuperPointSlopeEE();
    muon_SA_SP_slopeEE                                                  = &( tmp_muon_SA_SP_slopeEE );
    vector < double > tmp_muon_SA_SP_slopeCSC                           = mig.muonSASuperPointSlopeCSC();
    muon_SA_SP_slopeCSC                                                 = &( tmp_muon_SA_SP_slopeCSC);
    vector < double > tmp_muon_SA_SP_slopeBEE                           = mig.muonSASuperPointSlopeBEE();
    muon_SA_SP_slopeBEE                                                 = &( tmp_muon_SA_SP_slopeBEE );
    vector < double > tmp_muon_SA_SP_slopeBME                           = mig.muonSASuperPointSlopeBME();
    muon_SA_SP_slopeBME                                                 = &( tmp_muon_SA_SP_slopeBME );
    vector < double > tmp_muon_SA_SP_interceptBI                        = mig.muonSASuperPointInterceptBI();
    muon_SA_SP_interceptBI                                              = &( tmp_muon_SA_SP_interceptBI );
    vector < double > tmp_muon_SA_SP_interceptBM                        = mig.muonSASuperPointInterceptBM();
    muon_SA_SP_interceptBM                                              = &( tmp_muon_SA_SP_interceptBM );
    vector < double > tmp_muon_SA_SP_interceptBO                        = mig.muonSASuperPointInterceptBO();
    muon_SA_SP_interceptBO                                              = &( tmp_muon_SA_SP_interceptBO );
    vector < double > tmp_muon_SA_SP_interceptEI                        = mig.muonSASuperPointInterceptEI();
    muon_SA_SP_interceptEI                                              = &( tmp_muon_SA_SP_interceptEI );
    vector < double > tmp_muon_SA_SP_interceptEM                        = mig.muonSASuperPointInterceptEM();
    muon_SA_SP_interceptEM                                              = &( tmp_muon_SA_SP_interceptEM);
    vector < double > tmp_muon_SA_SP_interceptEO                        = mig.muonSASuperPointInterceptEO();
    muon_SA_SP_interceptEO                                              = &( tmp_muon_SA_SP_interceptEO );
    vector < double > tmp_muon_SA_SP_interceptEE                        = mig.muonSASuperPointInterceptEE();
    muon_SA_SP_interceptEE                                              = &( tmp_muon_SA_SP_interceptEE );
    vector < double > tmp_muon_SA_SP_interceptCSC                       = mig.muonSASuperPointInterceptCSC();
    muon_SA_SP_interceptCSC                                             = &( tmp_muon_SA_SP_interceptCSC);
    vector < double > tmp_muon_SA_SP_interceptBEE                       = mig.muonSASuperPointInterceptBEE();
    muon_SA_SP_interceptBEE                                             = &( tmp_muon_SA_SP_interceptBEE );
    vector < double > tmp_muon_SA_SP_interceptBME                       = mig.muonSASuperPointInterceptBME();
    muon_SA_SP_interceptBME                                             = &( tmp_muon_SA_SP_interceptBME );
    vector < double > tmp_muon_SA_SP_chi2BI                             = mig.muonSASuperPointChi2BI();
    muon_SA_SP_chi2BI                                                   = &( tmp_muon_SA_SP_chi2BI );
    vector < double > tmp_muon_SA_SP_chi2BM                             = mig.muonSASuperPointChi2BM();
    muon_SA_SP_chi2BM                                                   = &( tmp_muon_SA_SP_chi2BM );
    vector < double > tmp_muon_SA_SP_chi2BO                             = mig.muonSASuperPointChi2BO();
    muon_SA_SP_chi2BO                                                   = &( tmp_muon_SA_SP_chi2BO );
    vector < double > tmp_muon_SA_SP_chi2EI                             = mig.muonSASuperPointChi2EI();
    muon_SA_SP_chi2EI                                                   = &( tmp_muon_SA_SP_chi2EI );
    vector < double > tmp_muon_SA_SP_chi2EM                             = mig.muonSASuperPointChi2EM();
    muon_SA_SP_chi2EM                                                   = &( tmp_muon_SA_SP_chi2EM);
    vector < double > tmp_muon_SA_SP_chi2EO                             = mig.muonSASuperPointChi2EO();
    muon_SA_SP_chi2EO                                                   = &( tmp_muon_SA_SP_chi2EO );
    vector < double > tmp_muon_SA_SP_chi2EE                             = mig.muonSASuperPointChi2EE();
    muon_SA_SP_chi2EE                                                   = &( tmp_muon_SA_SP_chi2EE );
    vector < double > tmp_muon_SA_SP_chi2CSC                            = mig.muonSASuperPointChi2CSC();
    muon_SA_SP_chi2CSC                                                  = &( tmp_muon_SA_SP_chi2CSC);
    vector < double > tmp_muon_SA_SP_chi2BEE                            = mig.muonSASuperPointChi2BEE();
    muon_SA_SP_chi2BEE                                                  = &( tmp_muon_SA_SP_chi2BEE );
    vector < double > tmp_muon_SA_SP_chi2BME                            = mig.muonSASuperPointChi2BME();
    muon_SA_SP_chi2BME                                                  = &( tmp_muon_SA_SP_chi2BME );
    vector < float > tmp_muon_SA_RoIEta                                 = mig.muonSAroiEta();
    muon_SA_RoIEta                                                      = &( tmp_muon_SA_RoIEta );
    vector < float > tmp_muon_SA_RoIPhi                                 = mig.muonSAroiPhi();
    muon_SA_RoIPhi                                                      = &( tmp_muon_SA_RoIPhi );
    vector < double > tmp_muon_SA_isRPCFailure                          = mig.muonSAisrpcFailure();
    muon_SA_isRPCFailure                                                = &( tmp_muon_SA_isRPCFailure );
    vector < double > tmp_muon_SA_isTGCFailure                          = mig.muonSAistgcFailure();
    muon_SA_isTGCFailure                                                = &( tmp_muon_SA_isTGCFailure );
    vector < double > tmp_muon_SA_BarrelRadius                          = mig.muonSABarrelRadius();
    muon_SA_BarrelRadius                                                = &( tmp_muon_SA_BarrelRadius );
    vector < double > tmp_muon_SA_BarrelSagitta                         = mig.muonSABarrelSagitta();
    muon_SA_BarrelSagitta                                               = &( tmp_muon_SA_BarrelSagitta );
    vector < double > tmp_muon_SA_EtaMap                                = mig.muonSAEtaMap();
    muon_SA_EtaMap                                                      = &( tmp_muon_SA_EtaMap );
    vector < double > tmp_muon_SA_PhiMap                                = mig.muonSAPhiMap();
    muon_SA_PhiMap                                                      = &( tmp_muon_SA_PhiMap );
    vector < uint32_t > tmp_muon_SA_RoINumber                           = mig.muonSAroiNumber();
    muon_SA_RoINumber                                                   = &( tmp_muon_SA_RoINumber );
    vector < uint32_t > tmp_muon_SA_RoISector                           = mig.muonSAroiSector();
    muon_SA_RoISector                                                   = &( tmp_muon_SA_RoISector );
    vector < vector < float > > tmp_muon_SA_RPCHit_x                    = mig.muonSArpcHitX();
    muon_SA_RPCHit_x                                                    = &( tmp_muon_SA_RPCHit_x );
    vector < vector < float > > tmp_muon_SA_RPCHit_y                    = mig.muonSArpcHitY();
    muon_SA_RPCHit_y                                                    = &( tmp_muon_SA_RPCHit_y );
    vector < vector < float > > tmp_muon_SA_RPCHit_z                    = mig.muonSArpcHitZ();
    muon_SA_RPCHit_z                                                    = &( tmp_muon_SA_RPCHit_z );
    vector < vector < double > > tmp_muon_SA_RPCHit_r                   = mig.muonSArpcHitR();
    muon_SA_RPCHit_r                                                    = &( tmp_muon_SA_RPCHit_r );
    vector < vector < double > > tmp_muon_SA_RPCHit_eta                 = mig.muonSArpcHitEta();
    muon_SA_RPCHit_eta                                                  = &( tmp_muon_SA_RPCHit_eta );
    vector < vector < double > > tmp_muon_SA_RPCHit_phi                 = mig.muonSArpcHitPhi();
    muon_SA_RPCHit_phi                                                  = &( tmp_muon_SA_RPCHit_phi );
    vector < vector < uint32_t > > tmp_muon_SA_RPCHit_measuresPhi       = mig.muonSArpcHitMeasuresPhi();
    muon_SA_RPCHit_measuresPhi                                          = &( tmp_muon_SA_RPCHit_measuresPhi );
    vector < vector < string > > tmp_muon_SA_RPCHit_stationName         = mig.muonSArpcHitStationName();
    muon_SA_RPCHit_stationName                                          = &( tmp_muon_SA_RPCHit_stationName );
    vector < vector < double > > tmp_muon_SA_RPCHit_stationNumber       = mig.muonSArpcHitStationNumber();
    muon_SA_RPCHit_stationNumber                                        = &( tmp_muon_SA_RPCHit_stationNumber );
    vector < float > tmp_muon_SA_RPCFit_innPhi                          = mig.muonSArpcFitInnPhi();
    muon_SA_RPCFit_innPhi                                               = &( tmp_muon_SA_RPCFit_innPhi );
    vector < float > tmp_muon_SA_RPCFit_innSlope                        = mig.muonSArpcFitInnSlope();
    muon_SA_RPCFit_innSlope                                             = &( tmp_muon_SA_RPCFit_innSlope );
    vector < float > tmp_muon_SA_RPCFit_innOffset                       = mig.muonSArpcFitInnOffset();
    muon_SA_RPCFit_innOffset                                            = &( tmp_muon_SA_RPCFit_innOffset );
    vector < float > tmp_muon_SA_RPCFit_midPhi                          = mig.muonSArpcFitMidPhi();
    muon_SA_RPCFit_midPhi                                               = &( tmp_muon_SA_RPCFit_midPhi );
    vector < float > tmp_muon_SA_RPCFit_midSlope                        = mig.muonSArpcFitMidSlope();
    muon_SA_RPCFit_midSlope                                             = &( tmp_muon_SA_RPCFit_midSlope );
    vector < float > tmp_muon_SA_RPCFit_midOffset                       = mig.muonSArpcFitMidOffset();
    muon_SA_RPCFit_midOffset                                            = &( tmp_muon_SA_RPCFit_midOffset );
    vector < float > tmp_muon_SA_RPCFit_outPhi                          = mig.muonSArpcFitOutPhi();
    muon_SA_RPCFit_outPhi                                               = &( tmp_muon_SA_RPCFit_outPhi );
    vector < float > tmp_muon_SA_RPCFit_outSlope                        = mig.muonSArpcFitOutSlope();
    muon_SA_RPCFit_outSlope                                             = &( tmp_muon_SA_RPCFit_outSlope );
    vector < float > tmp_muon_SA_RPCFit_outOffset                       = mig.muonSArpcFitOutOffset();
    muon_SA_RPCFit_outOffset                                            = &( tmp_muon_SA_RPCFit_outOffset );
    vector < vector < float > > tmp_muon_SA_roadAw                      = mig.muonSARoadAw();
    muon_SA_roadAw                                                      = &( tmp_muon_SA_roadAw );
    vector < vector < float > > tmp_muon_SA_roadBw                      = mig.muonSARoadBw();
    muon_SA_roadBw                                                      = &( tmp_muon_SA_roadBw );
    vector < vector < float > > tmp_muon_SA_zMin                        = mig.muonSAZMin();
    muon_SA_zMin                                                        = &( tmp_muon_SA_zMin );
    vector < vector < float > > tmp_muon_SA_zMax                        = mig.muonSAZMax();
    muon_SA_zMax                                                        = &( tmp_muon_SA_zMax );
    vector < vector < float > > tmp_muon_SA_rMin                        = mig.muonSARMin();
    muon_SA_rMin                                                        = &( tmp_muon_SA_rMin );
    vector < vector < float > > tmp_muon_SA_rMax                        = mig.muonSARMax();
    muon_SA_rMax                                                        = &( tmp_muon_SA_rMax );
    vector < vector < float > > tmp_muon_SA_etaMin                      = mig.muonSAEtaMin();
    muon_SA_etaMin                                                      = &( tmp_muon_SA_etaMin );
    vector < vector < float > > tmp_muon_SA_etaMax                      = mig.muonSAEtaMax();
    muon_SA_etaMax                                                      = &( tmp_muon_SA_etaMax );
    vector < vector < int > > tmp_muon_SA_MDTHit_isOutlier              = mig.muonSAmdtHitIsOutlier();
    muon_SA_MDTHit_isOutlier                                            = &( tmp_muon_SA_MDTHit_isOutlier );
    vector < vector < int > > tmp_muon_SA_MDTHit_chamber                = mig.muonSAmdtHitChamber();
    muon_SA_MDTHit_chamber                                              = &( tmp_muon_SA_MDTHit_chamber );
    vector < vector < float > > tmp_muon_SA_MDTHit_r                    = mig.muonSAmdtHitR();
    muon_SA_MDTHit_r                                                    = &( tmp_muon_SA_MDTHit_r );
    vector < vector < float > > tmp_muon_SA_MDTHit_z                    = mig.muonSAmdtHitZ();
    muon_SA_MDTHit_z                                                    = &( tmp_muon_SA_MDTHit_z );
    vector < vector < float > > tmp_muon_SA_MDTHit_phi                  = mig.muonSAmdtHitPhi();
    muon_SA_MDTHit_phi                                                  = &( tmp_muon_SA_MDTHit_phi );
    vector < vector < float > > tmp_muon_SA_MDTHit_residual             = mig.muonSAmdtHitResidual();
    muon_SA_MDTHit_residual                                             = &( tmp_muon_SA_MDTHit_residual );
    vector < vector < float > > tmp_muon_SA_MDTHit_space                = mig.muonSAmdtHitSpace();
    muon_SA_MDTHit_space                                                = &( tmp_muon_SA_MDTHit_space );
    vector < vector < float > > tmp_muon_SA_MDTHit_sigma                = mig.muonSAmdtHitSigma();
    muon_SA_MDTHit_sigma                                                = &( tmp_muon_SA_MDTHit_sigma );
    vector < int > tmp_muon_CB_HypoPass                                 = mig.muonCBHypoPass();
    muon_CB_HypoPass                                                    = &( tmp_muon_CB_HypoPass );
    vector < bool > tmp_muon_CB_OvRmPass                                = mig.muonCBOvRmPass();
    muon_CB_OvRmPass                                                    = &( tmp_muon_CB_OvRmPass );
    vector < double > tmp_muon_CB_pt                                    = mig.muonCBPt();
    muon_CB_pt                                                          = &( tmp_muon_CB_pt );
    vector < double > tmp_muon_CB_eta                                   = mig.muonCBEta();
    muon_CB_eta                                                         = &( tmp_muon_CB_eta );
    vector < double > tmp_muon_CB_phi                                   = mig.muonCBPhi();
    muon_CB_phi                                                         = &( tmp_muon_CB_phi );
    vector < int > tmp_muon_EF_pass                                     = mig.muonEFPass();
    muon_EF_pass                                                        = &( tmp_muon_EF_pass );
    vector < double > tmp_muon_EF_pt                                    = mig.muonEFPt();
    muon_EF_pt                                                          = &( tmp_muon_EF_pt );
    vector < double > tmp_muon_EF_eta                                   = mig.muonEFEta();
    muon_EF_eta                                                         = &( tmp_muon_EF_eta );
    vector < double > tmp_muon_EF_phi                                   = mig.muonEFPhi();
    muon_EF_phi                                                         = &( tmp_muon_EF_phi );

    m_tree->Fill();
    return 1;
}

int EventTreeFCBM::finalize() {
	// write into file and close

	m_file->Write();

	return 1;
}

// eof
